{"version":3,"sources":["webpack:///./pages/index.js?f7ee"],"names":["App","props","state","counterContract","cuenta","event","incrementClick","bind","web3","currentProvider","Web3","providers","HttpProvider","theContractInstance","contract","setProvider","deployed","contrato","Increment","setState","filter","watch","err","console","log","args","who","amount","nextProps","instancia","account","eth","accounts","then","instanciaContrato","increment","from","gas","res","stopWatching","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;IAEqBA,G;;;AAEpB,cAAYC,KAAZ,EAAkB;AAAA;;AAAA,wGACXA,KADW;;AAEjB,QAAKC,KAAL,GAAc;AACbC,oBAAiB,IADJ;AAEb;AACAC,WAAQ,IAHK;AAIbC,UAAO;AAJM,GAAd;AAMA,QAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AARiB;AASjB;;AAED;;;;;;;;;;;;;AAQC,YAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAChCA,gBAAO,IAAI,4CAAJ,CAASA,KAAKC,eAAd,CAAP;AACA,SAFD,MAEO;AACN;AACA;AACAD,gBAAO,IAAI,4CAAJ,CAAS,IAAI,4CAAAE,CAAKC,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAP;AACA;;AARD;AAUIC,2B,GAAsB,wDAAAC,CAAS,2EAAT,C;;AAC1BD,4BAAoBE,WAApB,CAAgCP,KAAKC,eAArC;;AAEA;;eACqBI,oBAAoBG,QAApB,E;;;AAAjBC,gB;AAAiD;AACrD;;AAEA;AACIZ,a,GAAQY,SAASC,SAAT,E;AACZ;;AAEA,aAAKC,QAAL,CAAc;AACbhB,0BAAiBU,mBADJ;AAEb;AACAR,gBAAOA,KAHM;AAIbD,iBAAQ,IAJK;AAKbgB,iBAAQ;AALK,SAAd;;AAQA;AACAf,cAAMgB,KAAN,CAAY,UAASC,GAAT,EAAcjB,KAAd,EAAoB;AAC/B;AACA,aAAIiB,GAAJ,EAAQ;AACPC,kBAAQC,GAAR,CAAYF,GAAZ;AACA,UAFD,MAEO;AACNC,kBAAQC,GAAR,CAAY,oBAAZ;AACAD,kBAAQC,GAAR,CAAYnB,KAAZ;AACAkB,kBAAQC,GAAR,CAAY,+BAA+BnB,MAAMoB,IAAN,CAAWC,GAAtD;AACAH,kBAAQC,GAAR,CAAY,yCAAyCnB,MAAMoB,IAAN,CAAWE,MAAhE;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,SAhBD;AAiBAJ,gBAAQC,GAAR,CAAY,8BAAZ;;;;;;;;;;;;;;;;;;4CAG0BI,S,EAAW;AACrC,QAAKT,QAAL,CAAc;AACbf,YAAQwB;AADK,IAAd;AAGA;;AAGD;;;;;;mCAGgB;;AAEf,OAAIC,YAAY,KAAK3B,KAAL,CAAWC,eAA3B;;AAEA;AACA;AACA,OAAIK,IAAJ;AACC,OAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAChCA,WAAO,IAAI,4CAAJ,CAASA,KAAKC,eAAd,CAAP;AACA,IAFD,MAEO;AACN;AACA;AACAD,WAAO,IAAI,4CAAJ,CAAS,IAAI,4CAAAE,CAAKC,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAP;AACA;;AAED;AACA,OAAIkB,UAAUtB,KAAKuB,GAAL,CAASC,QAAT,CAAkB,CAAlB,CAAd;AACD;;AAEAH,aAAUb,QAAV,GAAqBiB,IAArB,CAA0B,UAASC,iBAAT,EAA2B;AACpD,WAAOA,kBAAkBC,SAAlB,CAA4B,EAACC,MAAMN,OAAP,EAAgBO,KAAI,MAApB,EAA5B,EAAyDJ,IAAzD,CAA8D,UAASK,GAAT,EAAchB,GAAd,EAAkB;AACtF,SAAGA,GAAH,EAAO;AACNC,cAAQC,GAAR,CAAY,OAAZ;AACAD,cAAQC,GAAR,CAAYF,GAAZ;AACA;AACA,MAJD,MAIO;AACNC,cAAQC,GAAR,CAAY,WAAZ;AACA;AACD,KARM,CAAP;AASA,IAVD;AAWA;;AAGD;;;;;;yCAGsB;;AAErB;AACA,QAAKtB,KAAL,CAAWG,KAAX,CAAiBkC,YAAjB;AACAhB,WAAQC,GAAR,CAAY,0BAAZ;AAEA;;;2BAEO;;AAEPD,WAAQC,GAAR,CAAY,KAAKtB,KAAL,CAAWE,MAAvB;;AAEA,UACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B,UAAKF,KAAL,CAAWE,MAArC;AAAA;AAAA,KAFD;AAGC;AAAA;AAAA,OAAQ,SAAS,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHD,IADD;AAOA;;;;;;;;;EAtI+B,6CAAAkC,CAAMC,S;;eAAlBzC,G;;;;;;;;;;;;;yBAAAA,G","file":"3.c326afe2832d367c101c.hot-update.js","sourcesContent":["import React from 'react';\nimport { default as Web3} from 'web3';\nimport contractArtifact from '../build/contracts/CounterEvents.json'\nimport { default as contract } from 'truffle-contract'\n\nexport default class App extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = ({\n\t\t\tcounterContract: null,\n\t\t\t/*contrato: null, */\n\t\t\tcuenta: null,\n\t\t\tevent: null, \n\t\t});\n\t\tthis.incrementClick = this.incrementClick.bind(this);\n\t}\n\n\t/*\n\t* Invocado 1 vez antes de que el render inicial ocurra \n\t*/\n\n\tasync componentWillMount(){\n\n\t\t// TODO ESTO SOBRA PORQUE USAMOS LA EXTENSION METAMASK\n\t\tvar web3;\n\t\tif (typeof web3 !== 'undefined') {\n\t\t\tweb3 = new Web3(web3.currentProvider);\n\t\t} else {\n\t\t\t//  Especificamos el provider \n\t\t\t// empleando chrome con MetaMask el provider es injectado automaticamente\n\t\t\tweb3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"))\n\t\t} \n\n\t\tvar theContractInstance = contract(contractArtifact);\n\t\ttheContractInstance.setProvider(web3.currentProvider);\n\n\t\t// CONTRATO\t\t\n\t\tvar contrato = await theContractInstance.deployed(); // ESTO YA ME GUARDA EL CONTRATO\n\t\t//console.log(contrato);\n\n\t\t// EVENTO \n\t\tvar event = contrato.Increment();\n\t\t//console.log(event);\t\t\n\n\t\tthis.setState({\n\t\t\tcounterContract: theContractInstance,\n\t\t\t/*contrato: contrato, */\n\t\t\tevent: event,\n\t\t\tcuenta: null,\n\t\t\tfilter: null,\n\t\t});\t\n\n\t\t// LANZAMOS WATCH\n\t\tevent.watch(function(err, event){\n\t\t\t//console.log(event);\n\t\t\tif (err){\n\t\t\t\tconsole.log(err);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"This is the event!\");\n\t\t\t\tconsole.log(event);\n\t\t\t\tconsole.log(\"Count was incremented by: \" + event.args.who);\n\t\t\t\tconsole.log(\"The counter has been updated up to: \" + event.args.amount);\n\t\t\t\t//return event.args.amount;\n\t\t\t\t// AQUI DEBERÍA IR LA ACTUALIZACION DEL ESTADO, de la variable cuenta que mostraria el dom\n\t\t\t\t// cada vez que se detecta un evento- es decir que se ha pulsado incrementar\n\t\t\t\t// se jejuta este trozo , es decir las lineas de codigo dentro del watch\n\t\t\t\t//  pero no puedo ni llamar a funciones de la clase App ni devilver un resultado\n\n\t\t\t}\n\t\t});\n\t\tconsole.log(\"event watch has been started\");\n\t} \n\n\tcomponentWillReceiveProps (nextProps) {\n\t\tthis.setState({\n\t\t\tcuenta: nextProps\n\t\t});\n\t}\n\n\n\t/*\n\t* metodo que incrementa el countador \n\t*/\n\tincrementClick(){\n\n\t\tvar instancia = this.state.counterContract;\n\n\t\t// ESTO SE QUITARIA DE MODO QUE EL USUARIO PAGA POR INCREMENTAR A TRAVES DE METAMASK\n\t\t//  para esta prueba se deja así para no tener que estar empleando metamask y ser mas rápido\n\t\tvar web3;\n\t\t\tif (typeof web3 !== 'undefined') {\n\t\t\t\tweb3 = new Web3(web3.currentProvider);\n\t\t\t} else {\n\t\t\t\t//  Especificamos el provider \n\t\t\t\t// empleando chrome con MetaMask el provider es injectado automaticamente\n\t\t\t\tweb3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"))\n\t\t\t} \n\n\t\t\t//console.log(web3.eth.accounts);\n\t\t\tvar account = web3.eth.accounts[0];\n\t\t//\n\n\t\tinstancia.deployed().then(function(instanciaContrato){\n\t\t\treturn instanciaContrato.increment({from: account, gas:200000}).then(function(res, err){\n\t\t\t\tif(err){\n\t\t\t\t\tconsole.log(\"ERROR\");\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t//return error(err);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"+1 succes\");\n\t\t\t\t}\t\t\t\t\n\t\t\t});\n\t\t});\t\n\t}\n\n\n\t/*\n\t* Invocado inmediatamente antes de que un componente se desmonte del DOM\n\t*/\n\tcomponentWillUnmount(){\n\n\t\t// TEAR DOWN WATCH\n\t\tthis.state.event.stopWatching();\n\t\tconsole.log(\"watch has been tore down\");\n\n\t}\n\n\trender(){\n\n\t\tconsole.log(this.state.cuenta);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1> Page under construction </h1>\n\t\t\t\t<h4> El contado está a : {this.state.cuenta} </h4>\n\t\t\t\t<button onClick={this.incrementClick}>Increment</button>\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}